from .protocols import SupportsRead
from . import Pointer

class ReaderFast:
    def __init__(self, file:SupportsRead[bytes], readSize:int|None=None)->None: ...
    def skipToPattern(self, pattern:bytes, *, stopBefore:bool, writer:Pointer[bytes]|None=None)->bool: ...
    # true definition is: def skipToPattern(self, pattern:bytes, stopBefore:bool, writer:Pointer[bytes]|None=None)->bool: ...
    # because ', *,' isn't supported on cpdef (because of C func call), 
    # but added to stay coherent with the pure python Reader
    # but since there is no '*args', without the ', *,' don't change much: 
    # there will be no error when calling without "[, stopBefore=...[, writer=...]]"
    def startsWithPattern(self, pattern:bytes)->bool: ...
    def skipPatternIf_startsWith(self, pattern:bytes)->bool: ...
    def __del__(self)->None: ...
    def _bench_skipToPattern(self, pattern:bytes)->None: ...
    def read(self, __size:"int|None"=None)->bytes: ...
    # true definition is: def read(self, _size:"int|None"=None)->bytes: ...
    # because '__<argName>' isn't supported on cdef class (migth be a bug),
    # but use the '__size' to stay coherent with the pure python Reader
    # but since that with the '__size' def, you can't use the arg's name, its no probleme